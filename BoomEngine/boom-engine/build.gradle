apply plugin: 'com.android.model.library'

def getExpiryDate() {
    def now = Calendar.getInstance();
    now.add(Calendar.MONTH, 1)
    return now.getTime().format('d,M,yyyy')
}


model {
    android {
        compileSdkVersion 25
        buildToolsVersion "26.0.2"

        defaultConfig {
            minSdkVersion.apiLevel    = 21
            targetSdkVersion.apiLevel = 25
            versionCode 1
            versionName "1.0"
        }

        ndk {
            def DEFINE_EXPIRY_DATE_FLAG = '-DEXPIRY_DATE=makeDate(' + getExpiryDate() + ')'
            def DEFINE_PACKAGE_FINGERPRINT = '-DPACKAGE_FINGERPRINT={0x77,0xF9,0x4C,0x77,0x94,0x8E,0x28,0xB2,0x74,0x20,0xCA,0x2C,0x36,0xD3,0xF5,0x75,0x26,0x5D,0x54,0xC2}'
            def DEFINE_FINGERPRINT_SUM = '-DFINGERPRINT_SUM=0x9C5'


            platformVersion = 23
            moduleName = 'BoomEngine'
            toolchain = 'clang'
            stl       = 'c++_static'
            CFlags.addAll(['-std=c11'])
            cppFlags.addAll(['-I' + file('src/main/jni/'),
                             DEFINE_EXPIRY_DATE_FLAG,
                             DEFINE_PACKAGE_FINGERPRINT,
                             DEFINE_FINGERPRINT_SUM,
                             '-std=c++11', '-Wall',
                             '-fno-exceptions', '-fno-rtti'])
            ldFlags.addAll(['-L' + file('src/main/jni/libs')])
            ldLibs.addAll(['android', 'log', 'atomic', 'AudioCore', 'ffts'])
            abiFilters.addAll(['armeabi-v7a'])
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles.add(file('proguard-rules.txt'))
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-annotations:25.3.1'
}
